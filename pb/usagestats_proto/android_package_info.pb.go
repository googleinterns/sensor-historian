// Code generated by protoc-gen-go.
// source: github.com/google/battery-historian/pb/usagestats_proto/android_package_info.proto
// DO NOT EDIT!

package usagestats

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PackageInfo struct {
	// Apps / service name. (e.g. com.google.android.apps.books)
	PkgName *string `protobuf:"bytes,1,req,name=pkg_name" json:"pkg_name,omitempty"`
	// App version number
	VersionCode *int32 `protobuf:"varint,2,opt,name=version_code" json:"version_code,omitempty"`
	// Version name
	VersionName *string `protobuf:"bytes,3,opt,name=version_name" json:"version_name,omitempty"`
	// First install time
	FirstInstallTime *int64 `protobuf:"varint,4,opt,name=first_install_time" json:"first_install_time,omitempty"`
	// Last update time
	LastUpdateTime *int64 `protobuf:"varint,5,opt,name=last_update_time" json:"last_update_time,omitempty"`
	// The sharedUserId assigned to this package by the device.
	Uid *int32 `protobuf:"varint,6,opt,name=uid" json:"uid,omitempty"`
	// The string label of the sharedUserId this package claims, if any.
	SharedUserId *string `protobuf:"bytes,7,opt,name=shared_user_id" json:"shared_user_id,omitempty"`
	// Whether or not the package is a system app (was installed in the device's
	// system image).
	// http://developer.android.com/reference/android/content/pm/ApplicationInfo.html#FLAG_SYSTEM
	IsSystemApp *bool `protobuf:"varint,8,opt,name=is_system_app" json:"is_system_app,omitempty"`
	// Whether or not the package has been installed as an update to a built-in
	// system app. This boolean is meaningless if is_system_app is false.
	// http://developer.android.com/reference/android/content/pm/ApplicationInfo.html#FLAG_UPDATED_SYSTEM_APP
	IsUpdatedSystemApp *bool  `protobuf:"varint,9,opt,name=is_updated_system_app" json:"is_updated_system_app,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *PackageInfo) Reset()                    { *m = PackageInfo{} }
func (m *PackageInfo) String() string            { return proto.CompactTextString(m) }
func (*PackageInfo) ProtoMessage()               {}
func (*PackageInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *PackageInfo) GetPkgName() string {
	if m != nil && m.PkgName != nil {
		return *m.PkgName
	}
	return ""
}

func (m *PackageInfo) GetVersionCode() int32 {
	if m != nil && m.VersionCode != nil {
		return *m.VersionCode
	}
	return 0
}

func (m *PackageInfo) GetVersionName() string {
	if m != nil && m.VersionName != nil {
		return *m.VersionName
	}
	return ""
}

func (m *PackageInfo) GetFirstInstallTime() int64 {
	if m != nil && m.FirstInstallTime != nil {
		return *m.FirstInstallTime
	}
	return 0
}

func (m *PackageInfo) GetLastUpdateTime() int64 {
	if m != nil && m.LastUpdateTime != nil {
		return *m.LastUpdateTime
	}
	return 0
}

func (m *PackageInfo) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PackageInfo) GetSharedUserId() string {
	if m != nil && m.SharedUserId != nil {
		return *m.SharedUserId
	}
	return ""
}

func (m *PackageInfo) GetIsSystemApp() bool {
	if m != nil && m.IsSystemApp != nil {
		return *m.IsSystemApp
	}
	return false
}

func (m *PackageInfo) GetIsUpdatedSystemApp() bool {
	if m != nil && m.IsUpdatedSystemApp != nil {
		return *m.IsUpdatedSystemApp
	}
	return false
}

func init() {
	proto.RegisterType((*PackageInfo)(nil), "usagestats.PackageInfo")
}

var fileDescriptor1 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0xcd, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x71, 0xd2, 0x58, 0x4d, 0xa6, 0x2a, 0x65, 0xb1, 0x12, 0x04, 0xa1, 0x78, 0xea, 0xc5,
	0xe6, 0x39, 0xbc, 0x89, 0x2f, 0xb0, 0x4c, 0xb2, 0xdb, 0x64, 0x69, 0x92, 0x5d, 0x76, 0x26, 0x42,
	0xdf, 0xd5, 0x87, 0x71, 0xdc, 0x1c, 0xec, 0xf5, 0xff, 0x1b, 0xbe, 0x81, 0xaf, 0xce, 0x71, 0x3f,
	0x37, 0xc7, 0xd6, 0x8f, 0x75, 0xe7, 0x7d, 0x37, 0xd8, 0xba, 0x41, 0x66, 0x1b, 0x2f, 0xef, 0xbd,
	0x23, 0xf6, 0xd1, 0xe1, 0x54, 0x87, 0xa6, 0x9e, 0x09, 0x3b, 0x4b, 0x8c, 0x4c, 0x3a, 0x44, 0xcf,
	0xbe, 0xc6, 0xc9, 0x44, 0xef, 0x8c, 0x0e, 0xd8, 0x9e, 0x85, 0xb4, 0x9b, 0x4e, 0xfe, 0x98, 0x48,
	0xc1, 0xff, 0xf1, 0xdb, 0x4f, 0x06, 0x9b, 0xcf, 0xe5, 0xe4, 0x43, 0x2e, 0xd4, 0x16, 0x8a, 0x70,
	0xee, 0xf4, 0x84, 0xa3, 0xad, 0xb2, 0xfd, 0xea, 0x50, 0xaa, 0x27, 0xb8, 0xff, 0xb6, 0x91, 0x9c,
	0x9f, 0x74, 0xeb, 0x8d, 0xad, 0x56, 0xfb, 0xec, 0xb0, 0xbe, 0xae, 0xe9, 0x36, 0x97, 0x5a, 0xaa,
	0x17, 0x50, 0x27, 0x17, 0x89, 0xe5, 0x9b, 0xcc, 0x0f, 0x83, 0x66, 0x27, 0x76, 0x23, 0x96, 0xab,
	0x0a, 0xb6, 0x03, 0x0a, 0xcd, 0xc1, 0x20, 0xdb, 0x45, 0xd6, 0x49, 0x36, 0x90, 0xcf, 0xce, 0x54,
	0xb7, 0x69, 0xf8, 0x19, 0x1e, 0xa9, 0xc7, 0x68, 0x8d, 0x9e, 0xc9, 0x46, 0x2d, 0xfd, 0x2e, 0x4d,
	0xef, 0xe0, 0xc1, 0x91, 0xa6, 0x0b, 0xb1, 0x1d, 0x35, 0x86, 0x50, 0x15, 0x92, 0x0b, 0xf5, 0x0a,
	0x3b, 0xc9, 0xcb, 0xa6, 0xb9, 0xe6, 0xf2, 0x8f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x25, 0xa3,
	0x5a, 0xc1, 0x3f, 0x01, 0x00, 0x00,
}
