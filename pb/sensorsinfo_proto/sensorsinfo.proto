// Copyright 2020 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Protocol buffers for storing active connection information.
syntax = "proto2";

package sensorsinfo;

option go_package = "github.com/googleinterns/sensor-historian/pb/sensorsinfo_proto;sensorsinfo";

// ActiveConn contains information about an active connection.
message ActiveConn{
    required string PackageName = 1;
    required int32 UID = 2;
    required int32 SensorNumber = 3;
    optional int32 Number = 4;
    optional int32 PendingFlush = 5;
    optional double SamplingRateHz = 6;
    optional double BatchingPeriodS = 7;
    optional bool HasSensorserviceRecord = 8;
    optional string OperatingMode = 9;
    optional string Source = 10;
}

// SubscriptionInfo contains information about one subscription event of
// a sensor to an application.
message SubscriptionInfo{
    required int64 StartMs = 1;
    required int64 EndMs = 2;
    required int32 SensorNumber = 3;
    required int32 UID = 4;
    required string PackageName = 5;
    optional double SamplingRateHz = 6;
    optional double BatchingPeriodS = 7;
    optional string Source = 8;
}

enum RequestMode{
    CONTINUOUS = 0;
    ON_CHANGE = 1;
    ONE_SHOT = 2;
    SPECIAL = 3;
}

message Sensor{
    required int32 Number = 1;
    required string Name = 2;
    required string Type = 3;
    required RequestMode RequestMode = 4;
    required double MaxRateHz = 5;
    required double MinRateHz = 6;
    optional int32 Version = 7;
    optional int32 Max = 8;
    optional int32 Reserved = 9;
    optional bool Batch = 10;
    optional bool WakeUp = 11;
    repeated SubscriptionInfo Subscriptions = 12;
    repeated ActiveConn ActiveConns = 13;
}

message App{
    required int32 UID = 1;
    optional string PackageName = 2;
    repeated SubscriptionInfo Subscriptions = 3;
    repeated ActiveConn ActiveConns = 4;
}

message AllSensorsInfo{
    repeated ActiveConn AllActiveConns = 1;
    repeated Sensor Sensors = 2;
    repeated App Apps = 3;
}
